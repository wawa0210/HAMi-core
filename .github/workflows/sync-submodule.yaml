on:
  # Run this workflow every time a new commit pushed to upstream/fork repository.
  # Run workflow on fork repository will help contributors find and resolve issues before sending a PR.
  pull_request:
  push:
    branches:
      - main

name: on-commit-to-master

jobs:
  send-pull-requests:
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Checkout everything to get access to the tags

      - uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Clone HAMi
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          JSON: ${{ toJSON(github) }}
        run: |
          LATEST_TAG=$(git describe --tags --always --abbrev=0)
          REPOSITORY="wawa0210/HAMi"
          FOLDER="bin/$REPOSITORY"
          BRANCH_NAME="sync-submodule-$LATEST_TAG"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "FOLDER=$FOLDER" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

          # Clone the remote repository and change working directory to the
          # folder it was cloned to.
          git clone \
            --depth=1 \
            --branch=master \
            https://wawa0210:${{ secrets.ACCESS_TOKEN }}@github.com/$REPOSITORY \
            $FOLDER

          cd $FOLDER

      - name: Update Submodules in HAMi
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          JSON: ${{ toJSON(github) }}
        run: |
          cd $FOLDER
          
          # Setup the committers identity.
          git config user.email "xiozhang0210@hotmail.com"
          git config user.name "wawa0210"

          # Create a new feature branch for the changes.
          git checkout -b $BRANCH_NAME

          git submodule update --init --recursive

          git submodule update --remote --recursive

          git add .
          git commit -m "Update submodules to $LATEST_TAG"
          # git push origin $BRANCH_NAME || echo "No changes to commit"
      
      - name: Create Pull Request in HAMi
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          commit-message: Update submodules
          branch: $BRANCH_NAME
          title: Update submodules
          body: This PR updates the submodules to their latest versions.
          base: main
